{"code":"(window.webpackJsonp=window.webpackJsonp||[]).push([[18],{315:function(s,n,e){\"use strict\";e.r(n);var a=e(30),t=Object(a.a)({},(function(){var s=this,n=s.$createElement,e=s._self._c||n;return e(\"ContentSlotsDistributor\",{attrs:{\"slot-key\":s.$parent.slotKey}},[e(\"h1\",{attrs:{id:\"跨域问题\"}},[e(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#跨域问题\"}},[s._v(\"#\")]),s._v(\" 跨域问题\")]),s._v(\" \"),e(\"p\",[s._v(\"前端打工仔面试时经常遇到的跨域问题 到底什么是跨域呢？\")]),s._v(\" \"),e(\"p\",[s._v(\"出现跨域这个词 首先是因为\"),e(\"a\",{attrs:{href:\"https://developer.mozilla.org/zh-CN/docs/Web/Security/Same-origin_policy\",target:\"_blank\",rel:\"noopener noreferrer\"}},[s._v(\"浏览器的同源限制策略\"),e(\"OutboundLink\")],1),s._v(\"。\\n浏览器规定只有 \"),e(\"strong\",[s._v(\"端口,协议 ，域名\")]),s._v(\"都一致才属于同源，可以互相访问\")]),s._v(\" \"),e(\"p\",[s._v(\"下图给出了不同源的结果\")]),s._v(\" \"),e(\"div\",{staticClass:\"language- line-numbers-mode\"},[e(\"pre\",{pre:!0,attrs:{class:\"language-text\"}},[e(\"code\",[s._v(\"\\nURL                                      \\t结果\\t原因\\nhttp://store.company.com/dir2/other.html\\t同源\\t只有路径不同\\nhttp://store.company.com/dir/inner/another.html\\t同源\\t只有路径不同\\nhttps://store.company.com/secure.html\\t         失败\\t协议不同\\nhttp://store.company.com:81/dir/etc.html\\t失败\\t端口不同 ( http:// 默认端口是80)\\nhttp://news.company.com/dir/other.html   \\t失败\\t主机不同\\n\")])]),s._v(\" \"),e(\"div\",{staticClass:\"line-numbers-wrapper\"},[e(\"span\",{staticClass:\"line-number\"},[s._v(\"1\")]),e(\"br\"),e(\"span\",{staticClass:\"line-number\"},[s._v(\"2\")]),e(\"br\"),e(\"span\",{staticClass:\"line-number\"},[s._v(\"3\")]),e(\"br\"),e(\"span\",{staticClass:\"line-number\"},[s._v(\"4\")]),e(\"br\"),e(\"span\",{staticClass:\"line-number\"},[s._v(\"5\")]),e(\"br\"),e(\"span\",{staticClass:\"line-number\"},[s._v(\"6\")]),e(\"br\"),e(\"span\",{staticClass:\"line-number\"},[s._v(\"7\")]),e(\"br\")])]),e(\"p\",[s._v(\"小朋友 你是否有很多问号 跨域原来是浏览器的锅 为什么一定要限制同源才能互相访问呢？\")]),s._v(\" \"),e(\"p\",[s._v(\"如果没有限制同源访问 一些钓鱼网站可以读取你的 cookie 信息 伪造身份向其他浏览器发送请求 也就是我们常说的 csrf 攻击。\")]),s._v(\" \"),e(\"h3\",{attrs:{id:\"解决跨域的常用方法\"}},[e(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#解决跨域的常用方法\"}},[s._v(\"#\")]),s._v(\" 解决跨域的常用方法\")]),s._v(\" \"),e(\"h2\",{attrs:{id:\"jsonp\"}},[e(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#jsonp\"}},[s._v(\"#\")]),s._v(\" JSONP\")]),s._v(\" \"),e(\"p\",[s._v(\"JSONP 这个名字听起来好像和 JSON 有很大关系 其实并没有。实质上就是通过动态插入 script 标签 通过 src 路径去访问跨域的地址 参数上带上要执行的回调函数 然后通过解析响应得到想要的信息。\")]),s._v(\" \"),e(\"p\",[s._v(\"这种做法有限制就是只能发送 GET 请求。那 img 标签的 src 可以用吗？别问，问就是不行，因为只有 script 标签可以解析响应。\")]),s._v(\" \"),e(\"p\",[s._v(\"实现如下： 具体可以参考我的另一篇文章\"),e(\"a\",{attrs:{href:\"https://www.jianshu.com/p/c6c221f825db\",target:\"_blank\",rel:\"noopener noreferrer\"}},[s._v(\"JSONP 是什么\"),e(\"OutboundLink\")],1)]),s._v(\" \"),e(\"div\",{staticClass:\"language- line-numbers-mode\"},[e(\"pre\",{pre:!0,attrs:{class:\"language-text\"}},[e(\"code\",[s._v(\"  let functionName = 'tina'+parseInt(Math.random()*100000,10);\\n//给调用函数创建一个随机的函数名\\n  script.src = 'http://u.com:8002/pay?callback=' + functionName;\\n//u.com为响应网站的域名，8002为响应网站的端口号\\n\\nwindow[callback] = function(result){ //定义函数\\n            if(result === 'success'){\\n                amount.innerText = amount.innerText - 1;\\n            }\\n        }\\n        script.onload = function(e){\\n            e.currentTarget.remove();//执行结束删除script标签\\n            delete window[callback]; //执行结束删除函数\\n        }\\n        script.onerror = function (e) {\\n            alert('fail');\\n            e.currentTarget.remove();//执行结束删除script标签\\n            delete window[callback];//执行结束删除函数\\n        }\\n    })\\n\")])]),s._v(\" \"),e(\"div\",{staticClass:\"line-numbers-wrapper\"},[e(\"span\",{staticClass:\"line-number\"},[s._v(\"1\")]),e(\"br\"),e(\"span\",{staticClass:\"line-number\"},[s._v(\"2\")]),e(\"br\"),e(\"span\",{staticClass:\"line-number\"},[s._v(\"3\")]),e(\"br\"),e(\"span\",{staticClass:\"line-number\"},[s._v(\"4\")]),e(\"br\"),e(\"span\",{staticClass:\"line-number\"},[s._v(\"5\")]),e(\"br\"),e(\"span\",{staticClass:\"line-number\"},[s._v(\"6\")]),e(\"br\"),e(\"span\",{staticClass:\"line-number\"},[s._v(\"7\")]),e(\"br\"),e(\"span\",{staticClass:\"line-number\"},[s._v(\"8\")]),e(\"br\"),e(\"span\",{staticClass:\"line-number\"},[s._v(\"9\")]),e(\"br\"),e(\"span\",{staticClass:\"line-number\"},[s._v(\"10\")]),e(\"br\"),e(\"span\",{staticClass:\"line-number\"},[s._v(\"11\")]),e(\"br\"),e(\"span\",{staticClass:\"line-number\"},[s._v(\"12\")]),e(\"br\"),e(\"span\",{staticClass:\"line-number\"},[s._v(\"13\")]),e(\"br\"),e(\"span\",{staticClass:\"line-number\"},[s._v(\"14\")]),e(\"br\"),e(\"span\",{staticClass:\"line-number\"},[s._v(\"15\")]),e(\"br\"),e(\"span\",{staticClass:\"line-number\"},[s._v(\"16\")]),e(\"br\"),e(\"span\",{staticClass:\"line-number\"},[s._v(\"17\")]),e(\"br\"),e(\"span\",{staticClass:\"line-number\"},[s._v(\"18\")]),e(\"br\"),e(\"span\",{staticClass:\"line-number\"},[s._v(\"19\")]),e(\"br\"),e(\"span\",{staticClass:\"line-number\"},[s._v(\"20\")]),e(\"br\")])]),e(\"h2\",{attrs:{id:\"window-postmessage\"}},[e(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#window-postmessage\"}},[s._v(\"#\")]),s._v(\" window.postMessage\")]),s._v(\" \"),e(\"p\",[s._v(\"MDN 上的定义\"),e(\"a\",{attrs:{href:\"https://developer.mozilla.org/zh-CN/docs/Web/API/Window/postMessage\",target:\"_blank\",rel:\"noopener noreferrer\"}},[s._v(\"window.postMessage\"),e(\"OutboundLink\")],1)]),s._v(\" \"),e(\"p\",[s._v(\"从广义上讲，一个窗口可以获得对另一个窗口的引用（比如 targetWindow = window.opener），然后在窗口上调用 targetWindow.postMessage() 方法分发一个 MessageEvent 消息。接收消息的窗口可以根据需要自由处理此事件。传递给 window.postMessage() 的参数（比如 message ）将通过消息事件对象暴露给接收消息的窗口。\")]),s._v(\" \"),e(\"p\",[s._v(\"语法\")]),s._v(\" \"),e(\"div\",{staticClass:\"language- line-numbers-mode\"},[e(\"pre\",{pre:!0,attrs:{class:\"language-text\"}},[e(\"code\",[s._v(\"otherWindow.postMessage(message, targetOrigin, [transfer]);\\n// targetOrigin属性规定了哪些窗口可以接收到消息\\n\\n\")])]),s._v(\" \"),e(\"div\",{staticClass:\"line-numbers-wrapper\"},[e(\"span\",{staticClass:\"line-number\"},[s._v(\"1\")]),e(\"br\"),e(\"span\",{staticClass:\"line-number\"},[s._v(\"2\")]),e(\"br\"),e(\"span\",{staticClass:\"line-number\"},[s._v(\"3\")]),e(\"br\")])]),e(\"div\",{staticClass:\"language- line-numbers-mode\"},[e(\"pre\",{pre:!0,attrs:{class:\"language-text\"}},[e(\"code\",[s._v('/*\\n * A窗口的域名是<http://example.com:8080>，以下是A窗口的script标签下的代码：\\n */\\n\\nvar popup = window.open(...popup details...);\\n\\n// 如果弹出框没有被阻止且加载完成\\n\\n// 这行语句没有发送信息出去，即使假设当前页面没有改变location（因为targetOrigin设置不对）\\npopup.postMessage(\"The user is \\'bob\\' and the password is \\'secret\\'\",\\n                  \"https://secure.example.net\");\\n\\n// 假设当前页面没有改变location，这条语句会成功添加message到发送队列中去（targetOrigin设置对了）\\npopup.postMessage(\"hello there!\", \"http://example.org\");\\n\\nfunction receiveMessage(event)\\n{\\n  // 我们能相信信息的发送者吗?  (也许这个发送者和我们最初打开的不是同一个页面).\\n  if (event.origin !== \"http://example.org\")\\n    return;\\n\\n  // event.source 是我们通过window.open打开的弹出页面 popup\\n  // event.data 是 popup发送给当前页面的消息 \"hi there yourself!  the secret response is: rheeeeet!\"\\n}\\nwindow.addEventListener(\"message\", receiveMessage, false);\\n\\n\\n/*\\n * 弹出页 popup 域名是<http://example.org>，以下是script标签中的代码:\\n */\\n\\n//当A页面postMessage被调用后，这个function被addEventListenner调用\\nfunction receiveMessage(event)\\n{\\n  // 我们能信任信息来源吗？\\n  if (event.origin !== \"http://example.com:8080\")\\n    return;\\n\\n  // event.source 就当前弹出页的来源页面\\n  // event.data 是 \"hello there!\"\\n\\n  // 假设你已经验证了所受到信息的origin (任何时候你都应该这样做), 一个很方便的方式就是把event.source\\n  // 作为回信的对象，并且把event.origin作为targetOrigin\\n  event.source.postMessage(\"hi there yourself!  the secret response \" +\\n                           \"is: rheeeeet!\",\\n                           event.origin);\\n}\\n\\nwindow.addEventListener(\"message\", receiveMessage, false);\\n')])]),s._v(\" \"),e(\"div\",{staticClass:\"line-numbers-wrapper\"},[e(\"span\",{staticClass:\"line-number\"},[s._v(\"1\")]),e(\"br\"),e(\"span\",{staticClass:\"line-number\"},[s._v(\"2\")]),e(\"br\"),e(\"span\",{staticClass:\"line-number\"},[s._v(\"3\")]),e(\"br\"),e(\"span\",{staticClass:\"line-number\"},[s._v(\"4\")]),e(\"br\"),e(\"span\",{staticClass:\"line-number\"},[s._v(\"5\")]),e(\"br\"),e(\"span\",{staticClass:\"line-number\"},[s._v(\"6\")]),e(\"br\"),e(\"span\",{staticClass:\"line-number\"},[s._v(\"7\")]),e(\"br\"),e(\"span\",{staticClass:\"line-number\"},[s._v(\"8\")]),e(\"br\"),e(\"span\",{staticClass:\"line-number\"},[s._v(\"9\")]),e(\"br\"),e(\"span\",{staticClass:\"line-number\"},[s._v(\"10\")]),e(\"br\"),e(\"span\",{staticClass:\"line-number\"},[s._v(\"11\")]),e(\"br\"),e(\"span\",{staticClass:\"line-number\"},[s._v(\"12\")]),e(\"br\"),e(\"span\",{staticClass:\"line-number\"},[s._v(\"13\")]),e(\"br\"),e(\"span\",{staticClass:\"line-number\"},[s._v(\"14\")]),e(\"br\"),e(\"span\",{staticClass:\"line-number\"},[s._v(\"15\")]),e(\"br\"),e(\"span\",{staticClass:\"line-number\"},[s._v(\"16\")]),e(\"br\"),e(\"span\",{staticClass:\"line-number\"},[s._v(\"17\")]),e(\"br\"),e(\"span\",{staticClass:\"line-number\"},[s._v(\"18\")]),e(\"br\"),e(\"span\",{staticClass:\"line-number\"},[s._v(\"19\")]),e(\"br\"),e(\"span\",{staticClass:\"line-number\"},[s._v(\"20\")]),e(\"br\"),e(\"span\",{staticClass:\"line-number\"},[s._v(\"21\")]),e(\"br\"),e(\"span\",{staticClass:\"line-number\"},[s._v(\"22\")]),e(\"br\"),e(\"span\",{staticClass:\"line-number\"},[s._v(\"23\")]),e(\"br\"),e(\"span\",{staticClass:\"line-number\"},[s._v(\"24\")]),e(\"br\"),e(\"span\",{staticClass:\"line-number\"},[s._v(\"25\")]),e(\"br\"),e(\"span\",{staticClass:\"line-number\"},[s._v(\"26\")]),e(\"br\"),e(\"span\",{staticClass:\"line-number\"},[s._v(\"27\")]),e(\"br\"),e(\"span\",{staticClass:\"line-number\"},[s._v(\"28\")]),e(\"br\"),e(\"span\",{staticClass:\"line-number\"},[s._v(\"29\")]),e(\"br\"),e(\"span\",{staticClass:\"line-number\"},[s._v(\"30\")]),e(\"br\"),e(\"span\",{staticClass:\"line-number\"},[s._v(\"31\")]),e(\"br\"),e(\"span\",{staticClass:\"line-number\"},[s._v(\"32\")]),e(\"br\"),e(\"span\",{staticClass:\"line-number\"},[s._v(\"33\")]),e(\"br\"),e(\"span\",{staticClass:\"line-number\"},[s._v(\"34\")]),e(\"br\"),e(\"span\",{staticClass:\"line-number\"},[s._v(\"35\")]),e(\"br\"),e(\"span\",{staticClass:\"line-number\"},[s._v(\"36\")]),e(\"br\"),e(\"span\",{staticClass:\"line-number\"},[s._v(\"37\")]),e(\"br\"),e(\"span\",{staticClass:\"line-number\"},[s._v(\"38\")]),e(\"br\"),e(\"span\",{staticClass:\"line-number\"},[s._v(\"39\")]),e(\"br\"),e(\"span\",{staticClass:\"line-number\"},[s._v(\"40\")]),e(\"br\"),e(\"span\",{staticClass:\"line-number\"},[s._v(\"41\")]),e(\"br\"),e(\"span\",{staticClass:\"line-number\"},[s._v(\"42\")]),e(\"br\"),e(\"span\",{staticClass:\"line-number\"},[s._v(\"43\")]),e(\"br\"),e(\"span\",{staticClass:\"line-number\"},[s._v(\"44\")]),e(\"br\"),e(\"span\",{staticClass:\"line-number\"},[s._v(\"45\")]),e(\"br\"),e(\"span\",{staticClass:\"line-number\"},[s._v(\"46\")]),e(\"br\"),e(\"span\",{staticClass:\"line-number\"},[s._v(\"47\")]),e(\"br\"),e(\"span\",{staticClass:\"line-number\"},[s._v(\"48\")]),e(\"br\"),e(\"span\",{staticClass:\"line-number\"},[s._v(\"49\")]),e(\"br\")])]),e(\"p\",[s._v(\"postMessage 在使用的过程中如果没有指定 origin 去验证发消息的窗口是否合法是很危险的 同时也需要验证接收到的内容是否对站点是否构成攻击\")]),s._v(\" \"),e(\"h2\",{attrs:{id:\"document-domain\"}},[e(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#document-domain\"}},[s._v(\"#\")]),s._v(\" document.domain\")]),s._v(\" \"),e(\"p\",[s._v(\"这种方式只适合主域名相同，但子域名不同的 iframe 跨域。比如主域名是http://crosdomain.com:9099，子域名是http://child.crosdomain.com:9099，这种情况下给两个页面指定一下document.domain即document.domain = crosdomain.com 就可以访问各自的 window 对象了。\")]),s._v(\" \"),e(\"h2\",{attrs:{id:\"cros\"}},[e(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#cros\"}},[s._v(\"#\")]),s._v(\" CROS\")]),s._v(\" \"),e(\"p\",[s._v('CORS 是一个 W3C 标准，全称是\"跨域资源共享\"（Cross-origin resource sharing）这里可以参考'),e(\"a\",{attrs:{href:\"http://www.ruanyifeng.com/blog/2016/04/cors.html\",target:\"_blank\",rel:\"noopener noreferrer\"}},[s._v(\"阮一峰老师的文章\"),e(\"OutboundLink\")],1)]),s._v(\" \"),e(\"p\",[s._v(\"cros 跨域请求分为简单请求和非简单请求\")]),s._v(\" \"),e(\"div\",{staticClass:\"language- line-numbers-mode\"},[e(\"pre\",{pre:!0,attrs:{class:\"language-text\"}},[e(\"code\",[s._v(\"（1) 请求方法是以下三种方法之一：\\n\\nHEAD\\nGET\\nPOST\\n（2）HTTP的头信息不超出以下几种字段：\\n\\nAccept\\nAccept-Language\\nContent-Language\\nLast-Event-ID\\nContent-Type：只限于三个值application/x-www-form-urlencoded、multipart/form-data、text/plain`\\n\")])]),s._v(\" \"),e(\"div\",{staticClass:\"line-numbers-wrapper\"},[e(\"span\",{staticClass:\"line-number\"},[s._v(\"1\")]),e(\"br\"),e(\"span\",{staticClass:\"line-number\"},[s._v(\"2\")]),e(\"br\"),e(\"span\",{staticClass:\"line-number\"},[s._v(\"3\")]),e(\"br\"),e(\"span\",{staticClass:\"line-number\"},[s._v(\"4\")]),e(\"br\"),e(\"span\",{staticClass:\"line-number\"},[s._v(\"5\")]),e(\"br\"),e(\"span\",{staticClass:\"line-number\"},[s._v(\"6\")]),e(\"br\"),e(\"span\",{staticClass:\"line-number\"},[s._v(\"7\")]),e(\"br\"),e(\"span\",{staticClass:\"line-number\"},[s._v(\"8\")]),e(\"br\"),e(\"span\",{staticClass:\"line-number\"},[s._v(\"9\")]),e(\"br\"),e(\"span\",{staticClass:\"line-number\"},[s._v(\"10\")]),e(\"br\"),e(\"span\",{staticClass:\"line-number\"},[s._v(\"11\")]),e(\"br\"),e(\"span\",{staticClass:\"line-number\"},[s._v(\"12\")]),e(\"br\")])]),e(\"p\",[s._v(\"对于简单的请求只需要在请求头添加上 origin 标示自己身份 后端添加上 Access-Control-Allow-Origin 标示同意这个身份访问;\")]),s._v(\" \"),e(\"p\",[s._v(\"如果需要发送 cookie 则需要前后端都设置 Access-Control-Allow-Credentials\")]),s._v(\" \"),e(\"p\",[s._v(\"对于非简单请求 会先发送一个预请求 检查请求头成功后返回 204 然后再触发第二次请求\")]),s._v(\" \"),e(\"h2\",{attrs:{id:\"nginx-反向代理\"}},[e(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#nginx-反向代理\"}},[s._v(\"#\")]),s._v(\" Nginx 反向代理\")]),s._v(\" \"),e(\"p\",[s._v(\"前端请求以本地路径路径进行访问 发送请求到 Nginx 服务器上 再以真实的域名广播到请求服务器上 这一层代理之后就不存在跨域问题了 。\")])])}),[],!1,null,null,null);n.default=t.exports}}]);","extractedComments":[]}
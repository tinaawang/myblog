{"code":"(window.webpackJsonp=window.webpackJsonp||[]).push([[20],{314:function(s,e,n){\"use strict\";n.r(e);var a=n(30),t=Object(a.a)({},(function(){var s=this,e=s.$createElement,n=s._self._c||e;return n(\"ContentSlotsDistributor\",{attrs:{\"slot-key\":s.$parent.slotKey}},[n(\"h1\",{attrs:{id:\"js-中的深拷贝与浅拷贝了解一下\"}},[n(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#js-中的深拷贝与浅拷贝了解一下\"}},[s._v(\"#\")]),s._v(\" JS 中的深拷贝与浅拷贝了解一下\")]),s._v(\" \"),n(\"p\",[s._v(\"在使用 Vue 做项目的时候，通常会有许多组件间传递对象的情况。如果只是简单的赋值的话（浅拷贝），是很危险的，因为你不知道什么情况下这个值就被修改了，还一脸蒙蔽，所以我们需要进行深拷贝。深拷贝和浅拷贝的概念，需要一点数据结构的知识去了解。\")]),s._v(\" \"),n(\"div\",{staticClass:\"language- line-numbers-mode\"},[n(\"pre\",{pre:!0,attrs:{class:\"language-text\"}},[n(\"code\",[s._v(\"声明一个object1对象\\nvar object1 = {\\n  a:'a',\\n  b:'b'\\n}\\n\")])]),s._v(\" \"),n(\"div\",{staticClass:\"line-numbers-wrapper\"},[n(\"span\",{staticClass:\"line-number\"},[s._v(\"1\")]),n(\"br\"),n(\"span\",{staticClass:\"line-number\"},[s._v(\"2\")]),n(\"br\"),n(\"span\",{staticClass:\"line-number\"},[s._v(\"3\")]),n(\"br\"),n(\"span\",{staticClass:\"line-number\"},[s._v(\"4\")]),n(\"br\"),n(\"span\",{staticClass:\"line-number\"},[s._v(\"5\")]),n(\"br\")])]),n(\"p\",[s._v(\"这时候我们来画个内存图：声明一个对象后在内存内某个地址上存入对象 object 的内容，这个地址指向 object1\")]),s._v(\" \"),n(\"p\",[n(\"img\",{attrs:{src:\"https://user-gold-cdn.xitu.io/2018/5/28/163a4e1862fa46f5?w=1240&h=727&f=png&s=39559\",alt:\"image.png\"}}),s._v(\"\\n然后把 对象 1 赋给对象 2 var object2 = object1\\n这时候的内存 我们来看一下\\n\"),n(\"img\",{attrs:{src:\"https://user-gold-cdn.xitu.io/2018/5/28/163a4e1866e9a3bf?w=1240&h=699&f=png&s=64982\",alt:\"image.png\"}}),s._v(\"\\n内存内同一个地址指向了两个变量，其中一个变量内容的改变都会影响这个地址内存储内容的改变，这就是浅拷贝。\\n我们在组件间传递对象的时候，当然不能进行这么危险的操作，应该将内存拷贝出去，使得另一个地址指向 object2,这样的拷贝就叫做深拷贝。深拷贝之后两个变量拥有相同的内容，但是内存地址不一样，互不影响。\\n那应该怎么进行深拷贝呢？？\")]),s._v(\" \"),n(\"h3\",{attrs:{id:\"_1、简单粗暴的对象深拷贝\"}},[n(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#_1、简单粗暴的对象深拷贝\"}},[s._v(\"#\")]),s._v(\" 1、简单粗暴的对象深拷贝\")]),s._v(\" \"),n(\"div\",{staticClass:\"language- line-numbers-mode\"},[n(\"pre\",{pre:!0,attrs:{class:\"language-text\"}},[n(\"code\",[s._v(\"var object2 = JSON.parse( JSON.stringify(object1) )\\n\")])]),s._v(\" \"),n(\"div\",{staticClass:\"line-numbers-wrapper\"},[n(\"span\",{staticClass:\"line-number\"},[s._v(\"1\")]),n(\"br\")])]),n(\"p\",[s._v(\"简单粗暴法没有办法深拷贝函数，如果需要得自己封装一个方法，去递归的深拷贝对象属性。方法大家可以参考这篇文章 \"),n(\"a\",{attrs:{href:\"http://jerryzou.com/posts/dive-into-deep-clone-in-javascript/\",target:\"_blank\",rel:\"noopener noreferrer\"}},[s._v(\"深入剖析 JavaScript 的深复制\"),n(\"OutboundLink\")],1)]),s._v(\" \"),n(\"h3\",{attrs:{id:\"_2-在这里值得一提的是以下这种方式，这种方式看起来像是深拷贝，其实是浅拷贝\"}},[n(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#_2-在这里值得一提的是以下这种方式，这种方式看起来像是深拷贝，其实是浅拷贝\"}},[s._v(\"#\")]),s._v(\" 2.在这里值得一提的是以下这种方式，这种方式看起来像是深拷贝，其实是浅拷贝\")]),s._v(\" \"),n(\"div\",{staticClass:\"language- line-numbers-mode\"},[n(\"pre\",{pre:!0,attrs:{class:\"language-text\"}},[n(\"code\",[s._v(\"function test() {\\n  'use strict';\\n\\n  let obj1 = { a: 0 , b: { c: 0}};\\n  let obj2 = Object.assign({}, obj1);\\n  console.log(JSON.stringify(obj2)); // { a: 0, b: { c: 0}}\\n\\n  obj1.a = 1;\\n  console.log(JSON.stringify(obj1)); // { a: 1, b: { c: 0}}\\n  console.log(JSON.stringify(obj2)); // { a: 0, b: { c: 0}}\\n\\n  obj2.a = 2;\\n  console.log(JSON.stringify(obj1)); // { a: 1, b: { c: 0}}\\n  console.log(JSON.stringify(obj2)); // { a: 2, b: { c: 0}}\\n\\n  obj2.b.c = 3;\\n  console.log(JSON.stringify(obj1)); // { a: 1, b: { c: 3}}\\n  console.log(JSON.stringify(obj2)); // { a: 2, b: { c: 3}}\\n\")])]),s._v(\" \"),n(\"div\",{staticClass:\"line-numbers-wrapper\"},[n(\"span\",{staticClass:\"line-number\"},[s._v(\"1\")]),n(\"br\"),n(\"span\",{staticClass:\"line-number\"},[s._v(\"2\")]),n(\"br\"),n(\"span\",{staticClass:\"line-number\"},[s._v(\"3\")]),n(\"br\"),n(\"span\",{staticClass:\"line-number\"},[s._v(\"4\")]),n(\"br\"),n(\"span\",{staticClass:\"line-number\"},[s._v(\"5\")]),n(\"br\"),n(\"span\",{staticClass:\"line-number\"},[s._v(\"6\")]),n(\"br\"),n(\"span\",{staticClass:\"line-number\"},[s._v(\"7\")]),n(\"br\"),n(\"span\",{staticClass:\"line-number\"},[s._v(\"8\")]),n(\"br\"),n(\"span\",{staticClass:\"line-number\"},[s._v(\"9\")]),n(\"br\"),n(\"span\",{staticClass:\"line-number\"},[s._v(\"10\")]),n(\"br\"),n(\"span\",{staticClass:\"line-number\"},[s._v(\"11\")]),n(\"br\"),n(\"span\",{staticClass:\"line-number\"},[s._v(\"12\")]),n(\"br\"),n(\"span\",{staticClass:\"line-number\"},[s._v(\"13\")]),n(\"br\"),n(\"span\",{staticClass:\"line-number\"},[s._v(\"14\")]),n(\"br\"),n(\"span\",{staticClass:\"line-number\"},[s._v(\"15\")]),n(\"br\"),n(\"span\",{staticClass:\"line-number\"},[s._v(\"16\")]),n(\"br\"),n(\"span\",{staticClass:\"line-number\"},[s._v(\"17\")]),n(\"br\"),n(\"span\",{staticClass:\"line-number\"},[s._v(\"18\")]),n(\"br\")])]),n(\"p\",[n(\"a\",{attrs:{href:\"%5Bhttps://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/Object/assign\"}},[s._v(\"Object.assign()\")]),s._v(\"方法将一个的对象上的属性枚举复制给另一个对象，但是当 object2 的值改变时也会改变 object1。感兴趣的同学可以去看看 object.assign()接口的源码，你会发现 object.assign()只是深拷贝了源对象的顶层属性，并没有递归的去进行深拷贝，当源对象的属性值是一个指向对象的引用，它也只拷贝那个引用值。\")]),s._v(\" \"),n(\"h3\",{attrs:{id:\"_3、-es8-中提供的新方法\"}},[n(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#_3、-es8-中提供的新方法\"}},[s._v(\"#\")]),s._v(\" 3、 ES8 中提供的新方法\")]),s._v(\" \"),n(\"p\",[s._v(\"ES8 中提供了一个新方法： \"),n(\"a\",{attrs:{href:\"https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/Object/getOwnPropertyDescriptors\",target:\"_blank\",rel:\"noopener noreferrer\"}},[s._v(\"Object.getOwnPropertyDescriptors\"),n(\"OutboundLink\")],1),s._v(\"。MDN 描述：该方法返回指定对象上一个自有属性对应的属性描述符。（自有属性指的是直接赋予该对象的属性，不需要从原型链上进行查找的属性）。应用如下：\")]),s._v(\" \"),n(\"div\",{staticClass:\"language- line-numbers-mode\"},[n(\"pre\",{pre:!0,attrs:{class:\"language-text\"}},[n(\"code\",[s._v(\"let a = {name:'lili',age:9,birth:'1995-10-13',sex:'gril'}\\n\\nconsole.info(Object.getOwnPropertyDescriptors(a))\\n\\n/* {name: {…}, age: {…}, birth: {…}, sex: {…}}\\nage\\n:\\n{value: 9, writable: true, enumerable: true, configurable: true}\\nbirth\\n:\\n{value: \\\"1995-10-13\\\", writable: true, enumerable: true, configurable: true}\\nname\\n:\\n{value: \\\"lili\\\", writable: true, enumerable: true, configurable: true}\\nsex\\n:\\n{value: \\\"gril\\\", writable: true, enumerable: true, configurable: true}*/\\n\")])]),s._v(\" \"),n(\"div\",{staticClass:\"line-numbers-wrapper\"},[n(\"span\",{staticClass:\"line-number\"},[s._v(\"1\")]),n(\"br\"),n(\"span\",{staticClass:\"line-number\"},[s._v(\"2\")]),n(\"br\"),n(\"span\",{staticClass:\"line-number\"},[s._v(\"3\")]),n(\"br\"),n(\"span\",{staticClass:\"line-number\"},[s._v(\"4\")]),n(\"br\"),n(\"span\",{staticClass:\"line-number\"},[s._v(\"5\")]),n(\"br\"),n(\"span\",{staticClass:\"line-number\"},[s._v(\"6\")]),n(\"br\"),n(\"span\",{staticClass:\"line-number\"},[s._v(\"7\")]),n(\"br\"),n(\"span\",{staticClass:\"line-number\"},[s._v(\"8\")]),n(\"br\"),n(\"span\",{staticClass:\"line-number\"},[s._v(\"9\")]),n(\"br\"),n(\"span\",{staticClass:\"line-number\"},[s._v(\"10\")]),n(\"br\"),n(\"span\",{staticClass:\"line-number\"},[s._v(\"11\")]),n(\"br\"),n(\"span\",{staticClass:\"line-number\"},[s._v(\"12\")]),n(\"br\"),n(\"span\",{staticClass:\"line-number\"},[s._v(\"13\")]),n(\"br\"),n(\"span\",{staticClass:\"line-number\"},[s._v(\"14\")]),n(\"br\"),n(\"span\",{staticClass:\"line-number\"},[s._v(\"15\")]),n(\"br\"),n(\"span\",{staticClass:\"line-number\"},[s._v(\"16\")]),n(\"br\"),n(\"span\",{staticClass:\"line-number\"},[s._v(\"17\")]),n(\"br\")])]),n(\"p\",[s._v(\"结合\"),n(\"a\",{attrs:{href:\"https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/Object/defineProperties\",target:\"_blank\",rel:\"noopener noreferrer\"}},[s._v(\"Object.defineProperties()\"),n(\"OutboundLink\")],1),s._v(\"方法，该方法直接在一个对象上定义新的属性或修改现有属性，并返回该对象,可以实现对象的深拷贝,结合上一个例子：\")]),s._v(\" \"),n(\"div\",{staticClass:\"language- line-numbers-mode\"},[n(\"pre\",{pre:!0,attrs:{class:\"language-text\"}},[n(\"code\",[s._v(\"let obj1 = { a: 0 , b: { c: 0}};\\nconsole.info(Object.getOwnPropertyDescriptors(obj1))\\n/*  {a:0,b:{c:0}}*/\\nobj1.b.c = 233;\\nobj1.a = 22;\\nconsole.info(Object.getOwnPropertyDescriptors(obj1))\\n/*  {a:22,b:{c:233}}*/\\nlet obj2 = {}\\nObject.defineProperties(obj2,Object.getOwnPropertyDescriptors(obj1))\\nconsole.info( obj2 )\\n/*  {a:22,b:{c:233}}*/\\n\")])]),s._v(\" \"),n(\"div\",{staticClass:\"line-numbers-wrapper\"},[n(\"span\",{staticClass:\"line-number\"},[s._v(\"1\")]),n(\"br\"),n(\"span\",{staticClass:\"line-number\"},[s._v(\"2\")]),n(\"br\"),n(\"span\",{staticClass:\"line-number\"},[s._v(\"3\")]),n(\"br\"),n(\"span\",{staticClass:\"line-number\"},[s._v(\"4\")]),n(\"br\"),n(\"span\",{staticClass:\"line-number\"},[s._v(\"5\")]),n(\"br\"),n(\"span\",{staticClass:\"line-number\"},[s._v(\"6\")]),n(\"br\"),n(\"span\",{staticClass:\"line-number\"},[s._v(\"7\")]),n(\"br\"),n(\"span\",{staticClass:\"line-number\"},[s._v(\"8\")]),n(\"br\"),n(\"span\",{staticClass:\"line-number\"},[s._v(\"9\")]),n(\"br\"),n(\"span\",{staticClass:\"line-number\"},[s._v(\"10\")]),n(\"br\"),n(\"span\",{staticClass:\"line-number\"},[s._v(\"11\")]),n(\"br\")])]),n(\"h4\",{attrs:{id:\"递归拷贝函数\"}},[n(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#递归拷贝函数\"}},[s._v(\"#\")]),s._v(\" 递归拷贝函数\")]),s._v(\" \"),n(\"div\",{staticClass:\"language- line-numbers-mode\"},[n(\"pre\",{pre:!0,attrs:{class:\"language-text\"}},[n(\"code\",[s._v(\"拷贝函数\\n\\nfunction deepCopy(obj){\\n    if(typeof obj !== 'object')return;\\n    var newObj = obj instanceof Array ? [] : {};\\n    for(var i in obj){\\n         newObj[key] = typeof obj[key] === 'object' ? deepCopy(obj[key]) : obj[key];\\n    }\\n    return newObj\\n}\\n\")])]),s._v(\" \"),n(\"div\",{staticClass:\"line-numbers-wrapper\"},[n(\"span\",{staticClass:\"line-number\"},[s._v(\"1\")]),n(\"br\"),n(\"span\",{staticClass:\"line-number\"},[s._v(\"2\")]),n(\"br\"),n(\"span\",{staticClass:\"line-number\"},[s._v(\"3\")]),n(\"br\"),n(\"span\",{staticClass:\"line-number\"},[s._v(\"4\")]),n(\"br\"),n(\"span\",{staticClass:\"line-number\"},[s._v(\"5\")]),n(\"br\"),n(\"span\",{staticClass:\"line-number\"},[s._v(\"6\")]),n(\"br\"),n(\"span\",{staticClass:\"line-number\"},[s._v(\"7\")]),n(\"br\"),n(\"span\",{staticClass:\"line-number\"},[s._v(\"8\")]),n(\"br\"),n(\"span\",{staticClass:\"line-number\"},[s._v(\"9\")]),n(\"br\"),n(\"span\",{staticClass:\"line-number\"},[s._v(\"10\")]),n(\"br\")])])])}),[],!1,null,null,null);e.default=t.exports}}]);","extractedComments":[]}
(window.webpackJsonp=window.webpackJsonp||[]).push([[24],{325:function(s,e,n){"use strict";n.r(e);var a=n(30),t=Object(a.a)({},(function(){var s=this,e=s.$createElement,n=s._self._c||e;return n("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[n("h1",{attrs:{id:"javascript-中的类型转换"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#javascript-中的类型转换"}},[s._v("#")]),s._v(" JavaScript 中的类型转换")]),s._v(" "),n("p",[s._v("JavaScript 中的类型转换分为两种 显式类型转换 和 隐式类型转换")]),s._v(" "),n("h2",{attrs:{id:"显式类型转换"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#显式类型转换"}},[s._v("#")]),s._v(" 显式类型转换")]),s._v(" "),n("p",[s._v("JavaScript 的类型转换包括 转为 boolean 转为 string 转为 number 三种。")]),s._v(" "),n("p",[s._v("手动的调用 API 转换数据类型，比如：")]),s._v(" "),n("h3",{attrs:{id:"转化布尔值"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#转化布尔值"}},[s._v("#")]),s._v(" 转化布尔值")]),s._v(" "),n("p",[s._v("JavaScript 中，只有 6 种情况可以被转换成 false，其他都会被转换成 true")]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v("console.log(Boolean(0)) // output: false\nconsole.log(Boolean(-0)) // output: false\nconsole.log(Boolean(undefined)) // output: false\nconsole.log(Boolean(null)) // output: false\nconsole.log(Boolean('')) // output: false\nconsole.log(Boolean(NaN)) // output: false\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br")])]),n("h3",{attrs:{id:"转化为字符串"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#转化为字符串"}},[s._v("#")]),s._v(" 转化为字符串")]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v("// number转化为字符串\nconsole.log(String(123))\n\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br")])]),n("h3",{attrs:{id:"转化为数字"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#转化为数字"}},[s._v("#")]),s._v(" 转化为数字")]),s._v(" "),n("p",[n("strong",[n("em",[s._v("boolean 型")])])]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v("如果是 true，返回 1。参数为 false，返回 +0\n\nconsole.log(Number(false)) // output: 0\n\nconsole.log(Number(true)) // output: 0\n\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br")])]),n("p",[n("strong",[n("em",[s._v("null undefiend")])])]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v("\nconsole.log(Number(null)) // output: 0\n\nconsole.log(Number(undefined)) // output: NaN\n\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br")])]),n("p",[n("strong",[n("em",[s._v("String")])]),s._v("\n字符串转化为数字，调用 ToNumer()方法，")]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v("console.log(Number('')) // output: 0\n\nconsole.log(Number(' ')) // output: 0\n\nconsole.log(Number('123.4')) // output: 123.4\n\nconsole.log(Number('123')) // output: 123\n\nconsole.log(Number('000123')) // output: 123\n\nconsole.log(Number('-123')) // output: -123\n\nconsole.log(Number('chart')) //output: NaN\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br"),n("span",{staticClass:"line-number"},[s._v("10")]),n("br"),n("span",{staticClass:"line-number"},[s._v("11")]),n("br"),n("span",{staticClass:"line-number"},[s._v("12")]),n("br"),n("span",{staticClass:"line-number"},[s._v("13")]),n("br")])]),n("h3",{attrs:{id:"转化为字符串-2"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#转化为字符串-2"}},[s._v("#")]),s._v(" 转化为字符串")]),s._v(" "),n("p",[n("strong",[n("em",[s._v("boolean 型")])])]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v("console.log(String(false))  //output: 'false'\n\nconsole.log(String(true)) //output: 'true'\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br")])]),n("p",[n("strong",[n("em",[s._v("null undefiend")])])]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v("\nconsole.log(String(null)) // output: 'null'\n\nconsole.log(String(undefined)) // output: 'undefined'\n\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br")])]),n("p",[n("strong",[n("em",[s._v("number")])])]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v("console.log(String(0)) // output: '0'\n\nconsole.log(String(-0)) // output: '0'\n\nconsole.log(String(12)) // output: '12'\n\nconsole.log(String(NaN)) // output: 'NaN'\n\nconsole.log(String(123.4)) // output: '123.4'\n\nconsole.log(String(00011))  // output: '9'  00011八进制转换为十进制为9 再输出字符串'9'\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br"),n("span",{staticClass:"line-number"},[s._v("10")]),n("br"),n("span",{staticClass:"line-number"},[s._v("11")]),n("br")])]),n("h3",{attrs:{id:"对象转化为数字和字符串"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#对象转化为数字和字符串"}},[s._v("#")]),s._v(" 对象转化为数字和字符串")]),s._v(" "),n("p",[s._v("对象转基础类型时优先调用 ToPrimitive()方法，这个方法传入值 一定会返回一个基础数据类型。")]),s._v(" "),n("p",[s._v("然后再根据基础数据类型的转化规则进行转化")]),s._v(" "),n("p",[s._v("参考规范中 ToPrimitive 的定义：")]),s._v(" "),n("p",[s._v("“返回对象的默认值。通过调用对象的[DefaultValue]]内部方法检索对象的默认值，并传递可选的提示 PreferredType。[[DefaultValue]]内部方法的行为由本规范为 8.12.8 中的所有本机 ECMAScript 对象定义。”")]),s._v(" "),n("p",[n("strong",[n("em",[s._v("对象转数字")])])]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v("console.log(Number([])) // output: 0\n\nconsole.log(Number({})) // output: NaN\n\nconsole.log(Number([1]))  // output: 1\n\nconsole.log(Number({name:'xxx'})) // output: NaN\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br")])]),n("p",[n("strong",[n("em",[s._v("对象转字符串")])])]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v("console.log(String([])) // output: ''\n\nconsole.log(String({})) // output: '[object Object]'\n\nconsole.log(String([1]))  // output: '1'\n\nconsole.log(String({name:'xxx'})) // output: '[object Object]'\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br")])]),n("h2",{attrs:{id:"隐式类型转换"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#隐式类型转换"}},[s._v("#")]),s._v(" 隐式类型转换")]),s._v(" "),n("p",[s._v("JavaScript 是一门弱类型语言，允许数据类型的自动转换,不会直接报错。常见的隐式类型转换的场景：")]),s._v(" "),n("h3",{attrs:{id:"算术运算符"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#算术运算符"}},[s._v("#")]),s._v(" +算术运算符")]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v("console.log(1+ []) // output: 1\n\nconsole.log(1+ true)  // output: 2\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br")])]),n("h3",{attrs:{id:"字符串连接符"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#字符串连接符"}},[s._v("#")]),s._v(" + 字符串连接符")]),s._v(" "),n("p",[s._v("当表达式两边是字符串和数字时 + 是字符串连接符")]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v("console.log('1' + 2) // output: '12'\n\nconsole.log(1+ [1])  // output: '11'\n\nconsole.log(1 + {})  // output: '1[object Object]'\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br")])]),n("h3",{attrs:{id:"关系运算符"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#关系运算符"}},[s._v("#")]),s._v(" == 关系运算符")]),s._v(" "),n("p",[s._v("== 是不严格的等值比较，只要关系式两边的值相等即可返回 true ，类型不同时会先进行类型转换再比较值")]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v("console.log([] == ![]) // output :true\n解析: [].toNumber 会返回 0; ![]先转化为布尔值为false 再调用 toNumber 方法返回 0\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br")])]),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v("console.log('1' == 1) // output :true\n解析： 如果表达式两边一边是字符串 一边是数字 转化为 数字再进行比较\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br")])]),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v("console.log(null == undefined) // output :true\n\n解析： 如果类型（x）与类型（y）相同，则：如果类型（x）未 null，则返回 true。如果类型（x）为 undfiend，则返回 true。\n\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br")])]),n("p",[s._v("其他场景参考 "),n("a",{attrs:{href:"http://es5.github.io/#x11.9.3",target:"_blank",rel:"noopener noreferrer"}},[s._v("规范"),n("OutboundLink")],1),s._v(" 中的译文：")]),s._v(" "),n("p",[s._v("“\n比较 x==y，其中 x 和 y 是值，产生 true 或 false。这样的比较执行如下：")]),s._v(" "),n("p",[s._v("如果类型（x）与类型（y）相同，则")]),s._v(" "),n("p",[s._v("如果类型（x）未 null，则返回 true。")]),s._v(" "),n("p",[s._v("如果类型（x）为 undfiend，则返回 true。")]),s._v(" "),n("p",[s._v("如果类型（x）是数字，则")]),s._v(" "),n("p",[s._v("如果 x 是 NaN，则返回 false。")]),s._v(" "),n("p",[s._v("如果 y 为 NaN，则返回 false。")]),s._v(" "),n("p",[s._v("如果 x 与 y 的数值相同，则返回 true。")]),s._v(" "),n("p",[s._v("如果 x 为+0，y 为-0，则返回 true。")]),s._v(" "),n("p",[s._v("如果 x 为-0，y 为+0，则返回 true。")]),s._v(" "),n("p",[s._v("返回 false。")]),s._v(" "),n("p",[s._v("如果类型（x）是字符串，则如果 x 和 y 是完全相同的字符序列（相同的长度和相应位置的相同字符），则返回 true。否则，返回 false。")]),s._v(" "),n("p",[s._v("如果类型（x）是布尔值，则如果 x 和 y 都为 true 或都为 false，则返回 true。否则，返回 false。")]),s._v(" "),n("p",[s._v("如果 x 和 y 引用同一个对象，则返回 true。否则，返回 false。")]),s._v(" "),n("p",[s._v("如果 x 为空且 y 未定义，则返回 true。")]),s._v(" "),n("p",[s._v("如果 x 未定义，y 为空，则返回 true。")]),s._v(" "),n("p",[s._v("如果类型（x）是数字，类型（y）是字符串，")]),s._v(" "),n("p",[s._v("返回比较结果 x==ToNumber（y）。")]),s._v(" "),n("p",[s._v("如果类型（x）是字符串，类型（y）是数字，")]),s._v(" "),n("p",[s._v("返回比较结果 ToNumber（x）==y。")]),s._v(" "),n("p",[s._v("如果类型（x）是布尔值，则返回比较结果 ToNumber（x）==y。")]),s._v(" "),n("p",[s._v("如果 Type（y）是布尔值，则返回比较结果 x==ToNumber（y）。")]),s._v(" "),n("p",[s._v("如果类型（x）是字符串或数字，类型（y）是对象，")]),s._v(" "),n("p",[s._v("返回比较结果 x==ToPrimitive（y）。")]),s._v(" "),n("p",[s._v("如果类型（x）是对象，类型（y）是字符串或数字，")]),s._v(" "),n("p",[s._v("返回比较结果 ToPrimitive（x）==y。")]),s._v(" "),n("p",[s._v("返回 false。\n”")])])}),[],!1,null,null,null);e.default=t.exports}}]);
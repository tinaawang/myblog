(window.webpackJsonp=window.webpackJsonp||[]).push([[26],{321:function(s,n,e){"use strict";e.r(n);var a=e(30),t=Object(a.a)({},(function(){var s=this,n=s.$createElement,e=s._self._c||n;return e("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[e("h1",{attrs:{id:"vue-object-的变化侦测"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#vue-object-的变化侦测"}},[s._v("#")]),s._v(" Vue Object 的变化侦测")]),s._v(" "),e("h2",{attrs:{id:"数据观察"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#数据观察"}},[s._v("#")]),s._v(" 数据观察")]),s._v(" "),e("p",[s._v("Vue 中的对象变化侦测是通过"),e("code",[s._v("Object.definePorperty")]),s._v("实现的，但是"),e("code",[s._v("Object.definePorperty")]),s._v("的方式有缺陷，比如不能直接代理整个对象，每次都要循环遍历对象的所有属性；尤大大说之后会使用 ES6 中的"),e("code",[s._v("Proxy")]),s._v(" 重写这个部分。这篇博客介绍的是 Object.definePorperty 实现的对象侦测。")]),s._v(" "),e("p",[s._v("我们来看下面这段代码，定义一个 defineReactive 函数，使用 Object.definePorperty 遍历对象对象属性的时候，设置 get 和 set；当对象属性被读取的时候触发 get，对象属性被设置的时候触发 set。这样就完成了对 data 的数据劫持，因为 Vue 的思想是响应式的，我们还需要收集这些变化。")]),s._v(" "),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[s._v("function defineReactive(data,key,val){\n    Object.definePorperty(data,key,{\n        enumerable: true,\n        configurable: true,\n        get:function(){\n            return val;\n        }\n        set :function (newVal){\n            if(val === newVal){return}\n            val = newVal;\n        }\n    })\n}\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br"),e("span",{staticClass:"line-number"},[s._v("8")]),e("br"),e("span",{staticClass:"line-number"},[s._v("9")]),e("br"),e("span",{staticClass:"line-number"},[s._v("10")]),e("br"),e("span",{staticClass:"line-number"},[s._v("11")]),e("br"),e("span",{staticClass:"line-number"},[s._v("12")]),e("br"),e("span",{staticClass:"line-number"},[s._v("13")]),e("br")])]),e("h2",{attrs:{id:"依赖-收集"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#依赖-收集"}},[s._v("#")]),s._v(" 依赖 收集")]),s._v(" "),e("p",[s._v("创建一个 Dep 类，在 get 中收集依赖，在 set 中新增依赖")]),s._v(" "),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[s._v("class Dep{\n    constructor(){\n        this.arr = []\n    }\n    addSub(sub){\n        this.arr.push(sub)\n    }\n     removeSub(sub){\n        remove(this.arr,sub)\n    }\n    depend(){\n        if(window.target){\n            this.addSub(window.target)\n        }\n    }\n    notify(){\n        const arrs  = this.arr.slice();\n        for(let i = 0; i< arrs.lenth ;i ++){\n            arrs[i].update();\n        }\n    }\n\n}\n\nfunction defineReactive(data,key,val){\n\n    let dep = new Dep()\n    Object.definePorperty(data,key,{\n        enumerable: true,\n        configurable: true,\n        get:function(){\n            dep.depend(); // 收集依赖\n            return val;\n        }\n        set :function (newVal){\n            if(val === newVal){return}\n            val = newVal;\n            dep.notify(); // 新增依赖\n        }\n    })\n}\n\n\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br"),e("span",{staticClass:"line-number"},[s._v("8")]),e("br"),e("span",{staticClass:"line-number"},[s._v("9")]),e("br"),e("span",{staticClass:"line-number"},[s._v("10")]),e("br"),e("span",{staticClass:"line-number"},[s._v("11")]),e("br"),e("span",{staticClass:"line-number"},[s._v("12")]),e("br"),e("span",{staticClass:"line-number"},[s._v("13")]),e("br"),e("span",{staticClass:"line-number"},[s._v("14")]),e("br"),e("span",{staticClass:"line-number"},[s._v("15")]),e("br"),e("span",{staticClass:"line-number"},[s._v("16")]),e("br"),e("span",{staticClass:"line-number"},[s._v("17")]),e("br"),e("span",{staticClass:"line-number"},[s._v("18")]),e("br"),e("span",{staticClass:"line-number"},[s._v("19")]),e("br"),e("span",{staticClass:"line-number"},[s._v("20")]),e("br"),e("span",{staticClass:"line-number"},[s._v("21")]),e("br"),e("span",{staticClass:"line-number"},[s._v("22")]),e("br"),e("span",{staticClass:"line-number"},[s._v("23")]),e("br"),e("span",{staticClass:"line-number"},[s._v("24")]),e("br"),e("span",{staticClass:"line-number"},[s._v("25")]),e("br"),e("span",{staticClass:"line-number"},[s._v("26")]),e("br"),e("span",{staticClass:"line-number"},[s._v("27")]),e("br"),e("span",{staticClass:"line-number"},[s._v("28")]),e("br"),e("span",{staticClass:"line-number"},[s._v("29")]),e("br"),e("span",{staticClass:"line-number"},[s._v("30")]),e("br"),e("span",{staticClass:"line-number"},[s._v("31")]),e("br"),e("span",{staticClass:"line-number"},[s._v("32")]),e("br"),e("span",{staticClass:"line-number"},[s._v("33")]),e("br"),e("span",{staticClass:"line-number"},[s._v("34")]),e("br"),e("span",{staticClass:"line-number"},[s._v("35")]),e("br"),e("span",{staticClass:"line-number"},[s._v("36")]),e("br"),e("span",{staticClass:"line-number"},[s._v("37")]),e("br"),e("span",{staticClass:"line-number"},[s._v("38")]),e("br"),e("span",{staticClass:"line-number"},[s._v("39")]),e("br"),e("span",{staticClass:"line-number"},[s._v("40")]),e("br"),e("span",{staticClass:"line-number"},[s._v("41")]),e("br"),e("span",{staticClass:"line-number"},[s._v("42")]),e("br"),e("span",{staticClass:"line-number"},[s._v("43")]),e("br")])]),e("h2",{attrs:{id:"observer-和-watcher"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#observer-和-watcher"}},[s._v("#")]),s._v(" Observer 和 Watcher")]),s._v(" "),e("p",[s._v("我们发现 defineReactive 函数只能将某一个属性转换为 get/set 的形式，所以我们需要一个观察者 Observer 用来帮助递归的侦测所有的 key")]),s._v(" "),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[s._v("class Observer{\n    constructor(value){\n        this.value = value\n    }\n    if(!Array.isArry(value)){\n        this.walk(value)\n    }\n    walk(obj){\n        const keys = Object.keys(obj)\n        for(let i = 0; i < keys.length ;i++){\n            defineReactive(data,keys[i],obj[keys[i])\n        }\n    }\n}\n\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br"),e("span",{staticClass:"line-number"},[s._v("8")]),e("br"),e("span",{staticClass:"line-number"},[s._v("9")]),e("br"),e("span",{staticClass:"line-number"},[s._v("10")]),e("br"),e("span",{staticClass:"line-number"},[s._v("11")]),e("br"),e("span",{staticClass:"line-number"},[s._v("12")]),e("br"),e("span",{staticClass:"line-number"},[s._v("13")]),e("br"),e("span",{staticClass:"line-number"},[s._v("14")]),e("br"),e("span",{staticClass:"line-number"},[s._v("15")]),e("br")])]),e("p",[s._v("当这些依赖收集完成之后，我们要通知谁呢？怎么样能让视图知道有变化更新？我们需要实现一个订阅者 Watcher,\n每次触发 get 的时候都将 dep 指向自己，这样就可以收集到依赖；\n每次 set 的时候都循环调用 Watcher 的 update 方法。")]),s._v(" "),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[s._v("class Watcher{\n    constructor(vm,exp,cb){\n        this.vm = vm;\n        this.cb = cb;\n        this.exp = exp;\n        this.value = this.get();\n    }\n    get(){\n        Dep.target = this;    // 将当前订阅者指向自己\n        var value = this.vm[exp];    // 触发getter，添加自己到属性订阅器中\n        Dep.target = null;    // 添加完毕，重置\n        return value;\n    }\n    update(){\n        const oldVal = this.value;\n        this.value = this.get();\n        this.cb.call(this.vm,this.value,oldVal)\n    }\n}\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br"),e("span",{staticClass:"line-number"},[s._v("8")]),e("br"),e("span",{staticClass:"line-number"},[s._v("9")]),e("br"),e("span",{staticClass:"line-number"},[s._v("10")]),e("br"),e("span",{staticClass:"line-number"},[s._v("11")]),e("br"),e("span",{staticClass:"line-number"},[s._v("12")]),e("br"),e("span",{staticClass:"line-number"},[s._v("13")]),e("br"),e("span",{staticClass:"line-number"},[s._v("14")]),e("br"),e("span",{staticClass:"line-number"},[s._v("15")]),e("br"),e("span",{staticClass:"line-number"},[s._v("16")]),e("br"),e("span",{staticClass:"line-number"},[s._v("17")]),e("br"),e("span",{staticClass:"line-number"},[s._v("18")]),e("br"),e("span",{staticClass:"line-number"},[s._v("19")]),e("br")])]),e("p",[s._v("当 Vue 实例挂载好之后，模板都会绑定一个 Watcher，谁的属性发生变化了就会通知响应的 Watcher,Watcher 再去通知编译器 Compile 进行视图更新")]),s._v(" "),e("h2",{attrs:{id:"侦测没办法监听到对象上属性的新增和删除"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#侦测没办法监听到对象上属性的新增和删除"}},[s._v("#")]),s._v(" 侦测没办法监听到对象上属性的新增和删除")]),s._v(" "),e("p",[s._v("Vue 通过"),e("code",[s._v("Object.definePorperty")]),s._v("将对象的 key 转化为 getter setter 的形式来进行侦测，但是无法追踪到属性的新增和删除，所以 Vue 中提供了 vm.$set 和 vm.$get 来实现。")])])}),[],!1,null,null,null);n.default=t.exports}}]);